import { ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { GetContentOptions } from '@builder.io/sdk';
import { BuilderComponentService } from '../builder-component/builder-component.service';
import * as i0 from "@angular/core";
export declare class BuilderContentComponent implements OnInit, OnDestroy {
    private element;
    private builderComponentService;
    constructor(element: ElementRef, builderComponentService: BuilderComponentService);
    modelName?: string;
    useHtml: boolean;
    data: any;
    hydrate: boolean;
    prerender: boolean;
    set content(content: any);
    get content(): any;
    private _content;
    findAndRunScripts(): void;
    options: GetContentOptions | null;
    contentLoad: EventEmitter<any>;
    contentError: EventEmitter<any>;
    get editingMode(): boolean;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BuilderContentComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BuilderContentComponent, "builder-content", never, { "useHtml": { "alias": "useHtml"; "required": false; }; "data": { "alias": "data"; "required": false; }; "hydrate": { "alias": "hydrate"; "required": false; }; "prerender": { "alias": "prerender"; "required": false; }; "content": { "alias": "content"; "required": false; }; "options": { "alias": "options"; "required": false; }; }, { "contentLoad": "contentLoad"; "contentError": "contentError"; }, never, ["*"], false, never>;
}
