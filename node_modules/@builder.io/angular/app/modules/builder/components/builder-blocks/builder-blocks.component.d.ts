import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { GetContentOptions } from '@builder.io/sdk';
import { BuilderService } from '../../services/builder.service';
import * as i0 from "@angular/core";
export declare class BuilderBlocksComponent {
    private domSanitizer;
    private builder;
    blocks: any;
    child: boolean;
    prerender: boolean;
    model: string;
    key: string;
    options: GetContentOptions | null;
    field: string;
    breakpoints: any;
    constructor(domSanitizer: DomSanitizer, builder: BuilderService);
    private lastInnerHtml;
    private lastInnerHtmlSanitized;
    get hasNoChildren(): boolean;
    get arrayBlocks(): boolean;
    get innerHtml(): SafeHtml;
    get _innerHtml(): string;
    trackByFn(index: number, value: any): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<BuilderBlocksComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BuilderBlocksComponent, "builder-blocks", never, { "blocks": { "alias": "blocks"; "required": false; }; "child": { "alias": "child"; "required": false; }; "prerender": { "alias": "prerender"; "required": false; }; "model": { "alias": "model"; "required": false; }; "key": { "alias": "key"; "required": false; }; "options": { "alias": "options"; "required": false; }; "field": { "alias": "field"; "required": false; }; "breakpoints": { "alias": "breakpoints"; "required": false; }; }, {}, never, never, false, never>;
}
