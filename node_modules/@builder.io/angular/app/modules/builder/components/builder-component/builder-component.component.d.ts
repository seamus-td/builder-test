import { EventEmitter, OnDestroy, OnInit, OnChanges, ViewContainerRef, ElementRef, SimpleChanges } from '@angular/core';
import { Router } from '@angular/router';
import { GetContentOptions } from '@builder.io/sdk';
import { Subscription, BehaviorSubject } from 'rxjs';
import { BuilderService } from '../../services/builder.service';
import * as i0 from "@angular/core";
export interface RouteEvent {
    /**
     * Url being routed to
     */
    url: string;
    /**
     * Html anchor element the href is on that
     * caused the route
     */
    anchorNode: HTMLAnchorElement;
    /**
     * Has preventDefault() been called preventing
     * builder from routing to the clicked URL
     */
    defaultPrevented: boolean;
    /**
     * Prevents builder from handling routing for you to handle
     * yourself
     */
    preventDefault(): void;
}
export declare class BuilderComponentComponent implements OnDestroy, OnInit, OnChanges {
    private viewContainer;
    private elementRef;
    private builderService;
    private router?;
    model: string | undefined;
    set name(name: string | undefined);
    handleRouting: boolean;
    reloadOnRoute: boolean;
    load: EventEmitter<any>;
    route: EventEmitter<RouteEvent>;
    error: EventEmitter<any>;
    content: any;
    options: GetContentOptions | null;
    data: any;
    context: any;
    hydrate: boolean;
    prerender: boolean;
    navigationTimeout: number | boolean;
    subscriptions: Subscription;
    visible: BehaviorSubject<boolean>;
    private get url();
    get key(): string;
    constructor(viewContainer: ViewContainerRef, elementRef: ElementRef, builderService: BuilderService, router?: Router);
    ensureWCScriptLoaded(): Promise<unknown>;
    ensureWcLoadedAndUpdate(): Promise<void>;
    ngOnInit(): void;
    triggerstateChange(): Promise<void>;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    onClick(event: MouseEvent): Promise<void>;
    private isRelative;
    private convertToRelative;
    private findHrefTarget;
    static ɵfac: i0.ɵɵFactoryDeclaration<BuilderComponentComponent, [null, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BuilderComponentComponent, "builder-component", never, { "model": { "alias": "model"; "required": false; }; "name": { "alias": "name"; "required": false; }; "handleRouting": { "alias": "handleRouting"; "required": false; }; "reloadOnRoute": { "alias": "reloadOnRoute"; "required": false; }; "content": { "alias": "content"; "required": false; }; "options": { "alias": "options"; "required": false; }; "data": { "alias": "data"; "required": false; }; "context": { "alias": "context"; "required": false; }; "hydrate": { "alias": "hydrate"; "required": false; }; "prerender": { "alias": "prerender"; "required": false; }; "navigationTimeout": { "alias": "navigationTimeout"; "required": false; }; }, { "load": "load"; "route": "route"; "error": "error"; }, never, ["*"], false, never>;
}
